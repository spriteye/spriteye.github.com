{"componentChunkName":"component---src-components-post-template-tsx","path":"/posts/2019/10/gatsby-hide-marginals/","webpackCompilationHash":"61206e7f69254dac973d","result":{"data":{"markdownRemark":{"html":"<p><a href=\"/posts/2019/09/gatsby-layout\">지난 글</a>에서 Header와 Footer를 가진 Layout을 만들었다. 두 컴포넌트는 항상 고정되어 있다. 하지만 상대적으로 화면이 작은 모바일에서 글을 읽을 때(스크롤을 내릴  때)는 두 Marginal 컴포넌트가 사라지도록 기능을 추가한다.</p>\n<p>특정 조건을 만족할 때 컴포넌트의 클래스 이름을 쉽게 변경할 수 있도록 <a href=\"https://github.com/JedWatson/classnames\"><code class=\"language-text\">Classnames</code></a> 패키지를 설치하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token operator\">></span> <span class=\"token function\">npm</span> i -E classnames</code></pre></div>\n<p>React Hook 코드들은 <code class=\"language-text\">src/hooks</code>에 위치할 예정이다.  React Hooks를 위해\b import alias를 하나 추가한다.</p>\n<div class=\"gatsby-code-title\">gatsby-config.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token operator\">...</span>\n        alias<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token string\">'~components'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'src/components'</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">          <span class=\"token string\">'~hooks'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'src/hooks'</span><span class=\"token punctuation\">,</span></span>          <span class=\"token string\">'~styles'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'src/styles'</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">...</span></code></pre></div>\n<p><a href=\"https://ko.reactjs.org/docs/hooks-intro.html\">React Hook</a>을 사용해서 스크롤 방향을 알아낼 수 있는 커스텀 혹을 만들어보자. 이 훅은 <a href=\"https://ko.reactjs.org/docs/hooks-state.html\"><code class=\"language-text\">useState</code></a>로 현재 화면의 y 좌표와 스크롤 방향이 위로 가고 있는지 여부를 알 수 있는 속성을 저장하고 반환한다. 상태 값은 <a href=\"https://ko.reactjs.org/docs/hooks-effect.html\"><code class=\"language-text\">useEffect</code></a>로 스크롤 이벤트를 수신하여 업데이트해준다.</p>\n<div class=\"gatsby-code-title\">src/hooks/useWindowScrollDirection.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useEffect<span class=\"token punctuation\">,</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">useWindowScrollDirection</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>windowScrollDirection<span class=\"token punctuation\">,</span> setWindowScrollDirection<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    y<span class=\"token punctuation\">:</span> <span class=\"token keyword\">typeof</span> window <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">?</span> window<span class=\"token punctuation\">.</span>pageYOffset <span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    isUp<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleScroll</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setWindowScrollDirection</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prev</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        y<span class=\"token punctuation\">:</span> window<span class=\"token punctuation\">.</span>pageYOffset<span class=\"token punctuation\">,</span>\n        isUp<span class=\"token punctuation\">:</span> prev<span class=\"token punctuation\">.</span>y <span class=\"token operator\">></span> window<span class=\"token punctuation\">.</span>pageYOffset\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> handleScroll<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> window<span class=\"token punctuation\">.</span><span class=\"token function\">removeEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> handleScroll<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> windowScrollDirection\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> useWindowScrollDirection</code></pre></div>\n<p>작성한 훅을 사용하여 아래로 스크롤할 때 Header 컴포넌트의 클래스 이름을 변경하여 컴포넌트가 스르륵 사라지게 만든다.</p>\n<div class=\"gatsby-code-title\">src/components/Layout/Header.js</div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> cx <span class=\"token keyword\">from</span> <span class=\"token string\">'classnames'</span></span><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Link <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby'</span>\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span>\n\n<span class=\"token keyword\">import</span> LayoutMarginalContainer <span class=\"token keyword\">from</span> <span class=\"token string\">'~components/Layout/MarginalContainer'</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> useWindowScrollDirection <span class=\"token keyword\">from</span> <span class=\"token string\">'~hooks/useWindowScrollDirection'</span></span>\n<span class=\"token keyword\">const</span> StyledHeader <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>header<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  ...\n<span class=\"gatsby-highlight-code-line\">  transition: top 0.4s ease;</span><span class=\"gatsby-highlight-code-line\"></span><span class=\"gatsby-highlight-code-line\">  @media (max-width: 500px) {</span><span class=\"gatsby-highlight-code-line\">    &amp;.hide {</span><span class=\"gatsby-highlight-code-line\">      top: -3.5rem;</span><span class=\"gatsby-highlight-code-line\">    }</span><span class=\"gatsby-highlight-code-line\">  }</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token operator\">...</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Header</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> isUp <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useWindowScrollDirection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token operator\">&lt;</span>StyledHeader className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">cx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token string\">'hide'</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">!</span>isUp <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span>LayoutMarginalContainer<span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">        <span class=\"token operator\">&lt;</span>StyledTitle to<span class=\"token operator\">=</span><span class=\"token string\">'/'</span><span class=\"token operator\">></span>spriteye<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>StyledTitle<span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>LayoutMarginalContainer<span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>StyledHeader<span class=\"token operator\">></span></span><span class=\"gatsby-highlight-code-line\">  <span class=\"token punctuation\">)</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token punctuation\">}</span></span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Header</code></pre></div>\n<p>Footer 역시 동일한 방식으로 스크롤 시 <code class=\"language-text\">bottom</code>을 감춰준다.</p>\n<p>이제 모바일 화면에서 아래로 스크롤하면 두 컴포넌트가 스르륵 사라진다.</p>\n<p><img src=\"/08a678c19ef37d4bdb1c1b099054c6a2/01-result.gif\"></p>\n<p>다음 글에서는 다크 테마로 전환할 수 있도록 테마 토글 버튼을 추가해보자.</p>","frontmatter":{"title":"Gatsby로 개인 웹사이트 만들기 - Header, Footer 감추기","description":"작은 화면에서는 글을 읽을 때 Header, Footer를 감춰준다","date":"October 04, 2019","tags":["gatsby","react-hooks"]},"fields":{"slug":"/posts/2019/10/gatsby-hide-marginals/"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/2019/10/gatsby-hide-marginals/"}}}