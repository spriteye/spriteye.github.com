{"version":3,"sources":["webpack:///./src/styles/color.ts","webpack:///./src/styles/post-style.ts","webpack:///./src/styles/prism-style.ts","webpack:///./src/components/Post/Template.tsx"],"names":["color","nord0","nord1","nord2","nord3","nord3Brightened","nord4","nord5","nord6","nord7","nord8","nord9","nord10","nord11","nord12","nord13","nord14","nord15","postStyle","css","theme","lighten","bg","rgba","margin","padding","syntax","cursorLine","selectionColor","visual","prismStyle","StyledArticle","styled","article","StyledArticleHeader","header","StyledArticleTitle","h1","StyledArticleDate","div","StyledContent","section","query","PostTemplate","data","Layout","PageMetadata","title","markdownRemark","frontmatter","description","keywords","tags","restUrl","fields","slug","date","dangerouslySetInnerHTML","__html","html"],"mappings":"uJAyBeA,EAxBD,CAEZC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,gBAAiB,UAEjBC,MAAO,UACPC,MAAO,UACPC,MAAO,UAEPC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,OAAQ,UAERC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,WCqDKC,EAtEGC,cAAH,mfAyCS,gBAAGC,EAAH,EAAGA,MAAH,OAAeC,YAAQ,GAAKD,EAAME,MAC3BC,YAAKvB,EAAMY,OAAQ,IAC5CY,YAAO,EAAG,SAAU,QAAS,UAC7BC,YAAQ,EAAG,EAAG,EAAG,UC5CjBC,EAAS,CACbJ,GAAItB,EAAMC,MACVD,MAAOA,EAAMM,MACbqB,WAAYJ,YAAKvB,EAAMG,MAAO,KAC9ByB,eAAgBL,YAAKvB,EAAMG,MAAO,KAG9B0B,EACQ,UADRA,EAEU,OAgHDC,EA7GIX,cAAH,giCAEVK,YAAO,EAAGK,EAAmB,SAAUA,GAEhCH,EAAO1B,MAGF0B,EAAOJ,GAEDtB,EAAMO,MACTsB,EAGbL,YAAO,GAiBKxB,EAAMI,MACHyB,EAIH7B,EAAMC,MACH4B,EAKjBL,YAAO,EAAGK,EAAmB,EAAGA,GAGzBH,EAAO1B,MAGF0B,EAAOJ,GACDtB,EAAMO,MACTsB,EAAuBA,EAIjBA,EAAuBA,EAYrC7B,EAAMC,MAGDD,EAAMO,MAMlBiB,YAAO,EAAG,SAAU,EAAG,UAILE,EAAOE,eACA5B,EAAMa,OAKxBb,EAAMW,MAINX,EAAMK,gBAKNL,EAAMgB,OAINhB,EAAMU,MAINV,EAAMS,MAINT,EAAMiB,QCzHnB,sCASA,IAAMc,EAAgBC,UAAOC,QAAV,8EAAGD,CAAH,sDAMbE,EAAsBF,UAAOG,OAAV,oFAAGH,CAAH,wBAInBI,EAAqBJ,UAAOK,GAAV,mFAAGL,CAAH,oDAOlBM,EAAoBN,UAAOO,IAAV,kFAAGP,CAAH,sCAKjBQ,EAAgBR,UAAOS,QAAV,8EAAGT,CAAH,YACfd,EACAY,GAiCSY,EAAQ,aAiBNC,UAzCmC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChD,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,MAAOH,EAAKI,eAAeC,YAAYF,MACvCG,YAAaN,EAAKI,eAAeC,YAAYC,YAC7CC,SAAUP,EAAKI,eAAeC,YAAYG,KAC1CC,QAAST,EAAKI,eAAeM,OAAOC,OAEtC,kBAACxB,EAAD,KACE,kBAACG,EAAD,KACE,kBAACE,EAAD,KACGQ,EAAKI,eAAeC,YAAYF,OAEnC,kBAACT,EAAD,KACGM,EAAKI,eAAeC,YAAYO,OAGrC,kBAAChB,EAAD,CACEiB,wBAAyB,CAAEC,OAAQd,EAAKI,eAAeW","file":"component---src-components-post-template-tsx-baeb36fc5eed86ca142c.js","sourcesContent":["// https://www.nordtheme.com\nconst color = {\n  // Polar Night\n  nord0: '#2E3440',\n  nord1: '#3B4252',\n  nord2: '#434C5E',\n  nord3: '#4C566A',\n  nord3Brightened: '#616E88',\n  // Snow Storm\n  nord4: '#D8DEE9',\n  nord5: '#E5E9F0',\n  nord6: '#ECEFF4',\n  // Frost\n  nord7: '#8FBCBB',\n  nord8: '#88C0D0',\n  nord9: '#81A1C1',\n  nord10: '#5E81AC',\n  // Aurora\n  nord11: '#BF616A',\n  nord12: '#D08770',\n  nord13: '#EBCB8B',\n  nord14: '#A3BE8C',\n  nord15: '#B48EAD'\n}\n\nexport default color\n","import { css } from 'styled-components'\nimport { lighten, margin, padding, rgba } from 'polished'\n\nimport color from '~styles/color'\n\nconst postStyle = css`\n  h1, h2, h3, h4 {\n    margin-top: 1.5em;\n    margin-bottom: .5em;\n  }\n\n  h2 {\n    font-size: 1.5em;\n  }\n\n  h3 {\n    font-size: 1.25em;\n  }\n\n  h4 {\n    margin-top: .5em;\n\n    font-weight: bold;\n  }\n\n  a {\n    text-decoration: underline;\n\n    &:hover {\n      text-decoration-style: double;\n    }\n  }\n\n  ul, ol {\n    margin-top: 0;\n    margin-bottom: .5em;\n    padding-left: 2em;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  blockquote {\n    font-style: italic;\n\n    background-color: ${({ theme }) => lighten(0.1, theme.bg)};\n    border-left: 0.2em solid ${rgba(color.nord10, 0.6)};\n    ${margin(0, '-1.5em', '1.5em', '-1.5em')}\n    ${padding(0, 0, 0, '1.5em')}\n\n    p {\n      margin: 0;\n      padding: 0;\n    }\n  }\n\n  .footnotes {\n    margin-top: 2em;\n\n    font-size: .8em;\n\n    hr {\n      margin-left: 0;\n\n      border: none;\n      border-top: 1px dashed silver;\n    }\n\n    ol {\n      padding-left: 1em;\n    }\n  }\n`\n\nexport default postStyle\n","import { css } from 'styled-components'\nimport { margin, rgba } from 'polished'\n\nimport color from '~styles/color'\n\nconst syntax = {\n  bg: color.nord0,\n  color: color.nord4,\n  cursorLine: rgba(color.nord2, 0.32),\n  selectionColor: rgba(color.nord2, 0.80)\n}\n\nconst visual = {\n  marginSize: '-1.5rem',\n  borderRadius: '.4em'\n}\n\nconst prismStyle = css`\n  .gatsby-highlight {\n    ${margin(0, visual.marginSize, '1.5rem', visual.marginSize)}\n\n    color: ${syntax.color};\n    font-size: 0.8em;\n\n    background: ${syntax.bg};\n\n    border: 1px solid ${color.nord5};\n    border-radius: ${visual.borderRadius};\n\n    pre {\n      ${margin(0)}\n      overflow: scroll;\n\n      code {\n        display: block;\n        padding: 1em 1.5em .5em;\n\n        line-height: 1.5;\n      }\n    }\n\n    pre::-webkit-scrollbar {\n      width: 0;\n      height: .5rem;\n    }\n\n    pre::-webkit-scrollbar-thumb {\n      background: ${color.nord3};\n      border-radius: ${visual.borderRadius};\n    }\n\n    pre::-webkit-scrollbar-track {\n      background: ${color.nord0};\n      border-radius: ${visual.borderRadius};\n    }\n  }\n\n  .gatsby-code-title {\n    ${margin(0, visual.marginSize, 0, visual.marginSize)}\n    padding: 1em 1.5em;\n\n    color: ${syntax.color};\n    font-size: 0.85em;\n\n    background: ${syntax.bg};\n    border: 1px solid ${color.nord5};\n    border-radius: ${visual.borderRadius} ${visual.borderRadius} 0 0;\n\n    + .gatsby-highlight {\n      border-top-style: none;\n      border-radius: 0 0 ${visual.borderRadius} ${visual.borderRadius};\n    }\n  }\n\n  code[class*=\"language-\"],\n  pre[class*=\"language-\"] {\n    padding: .5em 0em;\n  }\n\n  code[class=\"language-text\"] {\n    padding: .2em .4em;\n\n    color: ${color.nord0};\n    font-size: 0.85em;\n\n    background: ${color.nord5};\n    border-radius: .3em;\n  }\n\n  .gatsby-highlight-code-line {\n    display: block;\n    ${margin(0, '-1.5em', 0, '-1.5em')}\n    padding-right: 1em;\n    padding-left: 1.2em;\n\n    background-color: ${syntax.selectionColor};\n    border-left: 0.3em solid ${color.nord11};\n  }\n\n  .token.keyword,\n  .token.punctuation {\n    color: ${color.nord9};\n  }\n\n  .token.comment {\n    color: ${color.nord3Brightened};\n    font-weight: 500;\n  }\n\n  .token.string {\n    color: ${color.nord14};\n  }\n\n  .token.function {\n    color: ${color.nord8};\n  }\n\n  .token.tag {\n    color: ${color.nord7};\n  }\n\n  .token.number {\n    color: ${color.nord15}\n  }\n`\n\nexport default prismStyle\n","import { graphql } from 'gatsby'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport Layout from '~components/Layout'\nimport PageMetadata from '~components/PageMetadata'\nimport Post from '~models/remark/Post'\nimport postStyle from '~styles/post-style'\nimport prismStyle from '~styles/prism-style'\n\nconst StyledArticle = styled.article`\n  max-width: 50rem;\n  margin: auto;\n  padding: 1rem 1.5rem;\n`\n\nconst StyledArticleHeader = styled.header`\n  margin-bottom: 2em;\n`\n\nconst StyledArticleTitle = styled.h1`\n  margin-top: 0;\n  margin-bottom: .3em;\n\n  font-size: 2em;\n`\n\nconst StyledArticleDate = styled.div`\n  font-weight: 300;\n  font-size: 0.8em;\n`\n\nconst StyledContent = styled.section`\n  ${postStyle}\n  ${prismStyle}\n`\n\ninterface PostTemplateProps {\n  data: {\n    markdownRemark: Post\n  }\n}\n\nconst PostTemplate: React.FC<PostTemplateProps> = ({ data }: PostTemplateProps) => (\n  <Layout>\n    <PageMetadata\n      title={data.markdownRemark.frontmatter.title}\n      description={data.markdownRemark.frontmatter.description}\n      keywords={data.markdownRemark.frontmatter.tags}\n      restUrl={data.markdownRemark.fields.slug}\n    />\n    <StyledArticle>\n      <StyledArticleHeader>\n        <StyledArticleTitle>\n          {data.markdownRemark.frontmatter.title}\n        </StyledArticleTitle>\n        <StyledArticleDate>\n          {data.markdownRemark.frontmatter.date}\n        </StyledArticleDate>\n      </StyledArticleHeader>\n      <StyledContent\n        dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }}\n      />\n    </StyledArticle>\n  </Layout>\n)\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        description\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`\n\nexport default PostTemplate\n"],"sourceRoot":""}